// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5176.Totester;
    
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainFrontLeftDriveMotor;
    public static SpeedController driveTrainFrontRightDriveMotor;
    public static SpeedController driveTrainBackLeftDriveMotor;
    public static SpeedController driveTrainBackRightDriveMotor;
    public static RobotDrive driveTrainRobotDrive;
    public static SpeedController chainControlLeftChainMotor;
    public static SpeedController chainControlRightChainMotor;
    public static SpeedController guideWheelsLeftGuideMotor;
    public static SpeedController guideWheelsRightGuideMotor;
    public static Compressor binHookCompressor;
    public static Solenoid binHookTopSolenoid;
    public static Solenoid binHookBotSolenoid;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainFrontLeftDriveMotor = new Talon(0);
        LiveWindow.addActuator("DriveTrain", "FrontLeftDriveMotor", (Talon) driveTrainFrontLeftDriveMotor);
        
        driveTrainFrontRightDriveMotor = new Talon(2);
        LiveWindow.addActuator("DriveTrain", "FrontRightDriveMotor", (Talon) driveTrainFrontRightDriveMotor);
        
        driveTrainBackLeftDriveMotor = new Talon(1);
        LiveWindow.addActuator("DriveTrain", "BackLeftDriveMotor", (Talon) driveTrainBackLeftDriveMotor);
        
        driveTrainBackRightDriveMotor = new Talon(3);
        LiveWindow.addActuator("DriveTrain", "BackRightDriveMotor", (Talon) driveTrainBackRightDriveMotor);
        
        driveTrainRobotDrive = new RobotDrive(driveTrainFrontLeftDriveMotor, driveTrainBackLeftDriveMotor,
              driveTrainFrontRightDriveMotor, driveTrainBackRightDriveMotor);
        
        driveTrainRobotDrive.setSafetyEnabled(true);
        driveTrainRobotDrive.setExpiration(0.1);
        driveTrainRobotDrive.setSensitivity(0.5);
        driveTrainRobotDrive.setMaxOutput(1.0);

        chainControlLeftChainMotor = new Talon(4);
        LiveWindow.addActuator("ChainControl", "LeftChainMotor", (Talon) chainControlLeftChainMotor);
        
        chainControlRightChainMotor = new Talon(5);
        LiveWindow.addActuator("ChainControl", "RightChainMotor", (Talon) chainControlRightChainMotor);
        
        guideWheelsLeftGuideMotor = new Talon(6);
        LiveWindow.addActuator("GuideWheels", "LeftGuideMotor", (Talon) guideWheelsLeftGuideMotor);
        
        guideWheelsRightGuideMotor = new Talon(7);
        LiveWindow.addActuator("GuideWheels", "RightGuideMotor", (Talon) guideWheelsRightGuideMotor);
        
        binHookCompressor = new Compressor(0);
        
        
        binHookTopSolenoid = new Solenoid(0, 0);
        LiveWindow.addActuator("BinHook", "TopSolenoid", binHookTopSolenoid);
        
        binHookBotSolenoid = new Solenoid(0, 1);
        LiveWindow.addActuator("BinHook", "BotSolenoid", binHookBotSolenoid);
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
